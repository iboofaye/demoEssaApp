/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.example.demoEssaApp.controller;


import com.example.demoEssaApp.model.AppUser;
import com.example.demoEssaApp.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
/**
 *
 * @author LENOVO
 */
@Controller // This means that this class is a Controller
@RequestMapping(path="/appuser") // This means URL's start with /demo (after Application path)
public class AppController {
    
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private UserRepository userRepository;

  @PostMapping(path="/adduser") 
  public @ResponseBody String addNewUser (@RequestParam String name
      , @RequestParam String email) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    AppUser n = new AppUser();
    n.setName(name);
    n.setEmail(email);
    userRepository.save(n);
    return "Saved";
  }
  
  @PostMapping(path="/add") 
  public @ResponseBody String addNewUser (@RequestBody AppUser user) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request
    userRepository.save(user);
    return "Saved";
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<AppUser> getAllUsers() {
    // This returns a JSON or XML with the users
    return userRepository.findAll();
  }
  
  @GetMapping(path="/{nom}")
  public @ResponseBody Iterable<AppUser> getByName(@PathVariable String nom) {
    // This returns a JSON or XML with the users
    return userRepository.findByName(nom);
  }
  
  @PostMapping(path="/delete/{id}") //delete user
  public @ResponseBody String delUser (@PathVariable int id) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request
    userRepository.deleteById(id);
    return "deleted";
  }
    
}
